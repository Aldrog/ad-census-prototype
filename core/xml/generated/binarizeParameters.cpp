/**
 * \file binarizeParameters.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include <vector>
#include <stddef.h>
#include "binarizeParameters.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
template<>
Reflection BaseReflection<BinarizeParameters>::reflection = Reflection();
template<>
int BaseReflection<BinarizeParameters>::dummy = BinarizeParameters::staticInit();
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN

int BinarizeParameters::staticInit()
{

    ReflectionNaming &nameing = naming();
    nameing = ReflectionNaming(
        "Binarize Parameters",
        "Binarize Parameters",
        ""
    );
     

    fields().push_back(
        new IntField
        (
          BinarizeParameters::THRESHOLD_ID,
          offsetof(BinarizeParameters, mThreshold),
          2000,
          "Threshold",
          "Threshold",
          "Threshold",
          true,
         0,
         4096
        )
    );
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


